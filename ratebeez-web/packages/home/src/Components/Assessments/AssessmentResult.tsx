import React from 'react';
import { graphql, useFragment } from 'react-relay/hooks';
import { useReactToPrint } from 'react-to-print';

import { event } from 'nextjs-google-analytics';

import { AssessmentResult_record$key } from '@picasso/fragments/src/AssessmentResult_record.graphql';

import _ from 'lodash';

import { PrinterOutlined } from '@ant-design/icons';
import { Button } from 'antd';

import Link from 'src/Components/Link';

const fragmentSpec = graphql`
  fragment AssessmentResult_record on AuditCenterFrameworkAssessmentTemplate {
    id
    name
    shortId
    formData {
      sections {
        label
        description
        fields {
          name
          label
        }
      }
    }
  }
`;

interface IAssessmentResultProps {
  record: AssessmentResult_record$key;
  values: any;
}

const getPageMargins = (margin: string) => {
  return `@page { margin: ${margin} !important; }`;
};

function AssessmentResult(props: IAssessmentResultProps) {
  const record = useFragment(fragmentSpec, props.record);

  const componentRef = React.useRef(null);

  const handlePrint = useReactToPrint({
    content: () => componentRef.current,
  });

  const onPrintClick = () => {
    handlePrint();
    event('assessment_print', {
      category: 'Assessment',
      label: record.name,
    });
  };

  const fields = _.flatten(
    _.map(record.formData.sections, (section) => section.fields)
  );

  const unknownFields = _.filter(fields, (field) => {
    return !props.values[field.name];
  });

  const yesFields = _.filter(fields, (field) => {
    return props.values[field.name] === 'yes';
  });

  const noFields = _.filter(fields, (field) => {
    return props.values[field.name] === 'no';
  });

  const fieldGroups = [
    {
      label: 'Unknown',
      description: 'These fields were not answered',
      fields: unknownFields,
    },
    {
      label: 'No',
      description: 'These fields were answered with "No"',
      fields: noFields,
    },
    {
      label: 'Yes',
      description: 'These fields were answered with "Yes"',
      fields: yesFields,
    },
  ];

  return (
    <>
      <div className="p-4 space-y-2" ref={componentRef}>
        <div className="hidden print:block">
          <h2 className="text-2xl font-bold text-picasso-primary-800">
            {record.name}
          </h2>

          <p className="text-sm text-gray-500 my-2">
            This report was generated by Picasso. Learn more at{' '}
            <Link to="https://usepicasso.com">usepicasso.com</Link>
          </p>
        </div>

        {_.map(fieldGroups, (fieldGroup) => {
          if (fieldGroup.fields.length === 0) {
            return null;
          }

          return (
            <div key={fieldGroup.label}>
              <h2 className="text-picasso-primary-800">{fieldGroup.label}</h2>
              <p className="text-gray-500">{fieldGroup.description}</p>
              <ul className="mt-2 list-square">
                {_.map(fieldGroup.fields, (field) => {
                  return (
                    <li key={field.name} className="text-gray-700 my-1">
                      {field.label}
                    </li>
                  );
                })}
              </ul>
            </div>
          );
        })}

        <style>{getPageMargins('24px')}</style>
      </div>

      <Button onClick={onPrintClick} type="primary" className="m-4 mb-8">
        Print <PrinterOutlined className="px-2" />
      </Button>
    </>
  );
}

export default AssessmentResult;

"""
Requires that exactly one field must be supplied and that field must not be `null`.
"""
directive @oneOf on INPUT_OBJECT

type Attachment implements ModelInterface & Node {
  contentType: String
  createdAt: ISO8601DateTime!
  id: ID!
  modelId: Int!
  name: String!
  recordId: Int!
  recordType: String!
  updatedAt: ISO8601DateTime!
  url: String
}

"""Autogenerated input type of CreateDirectUpload"""
input CreateDirectUploadInput {
  """A unique identifier for the client performing the mutation."""
  clientMutationId: String
  byteSize: Int!
  checksum: String!
  contentType: String!
  filename: String!
}

"""Autogenerated return type of CreateDirectUpload."""
type CreateDirectUploadPayload {
  """A unique identifier for the client performing the mutation."""
  clientMutationId: String
  directUpload: DirectUpload!
  errors: [String!]!
}

"""Autogenerated input type of DestroyObject"""
input DestroyObjectInput {
  """A unique identifier for the client performing the mutation."""
  clientMutationId: String
  objectId: ID!
}

"""Autogenerated return type of DestroyObject."""
type DestroyObjectPayload {
  """A unique identifier for the client performing the mutation."""
  clientMutationId: String
  errors: [String!]!
}

type DirectUpload {
  directUploadHeaders: JSON!
  directUploadUrl: String!
  filename: String!
  id: String!
  publicUrl: String!
  signedId: String!
}

"""Autogenerated input type of DiscardObject"""
input DiscardObjectInput {
  """A unique identifier for the client performing the mutation."""
  clientMutationId: String
  objectId: ID!
}

"""Autogenerated return type of DiscardObject."""
type DiscardObjectPayload {
  """A unique identifier for the client performing the mutation."""
  clientMutationId: String
  errors: [String!]!
}

"""An ISO 8601-encoded datetime"""
scalar ISO8601DateTime

"""Represents untyped JSON"""
scalar JSON

type JobRecord implements ModelInterface & Node {
  activeJobId: String
  concurrencyKey: String
  createdAt: ISO8601DateTime!
  cronAt: ISO8601DateTime
  cronKey: String
  error: String
  finishedAt: ISO8601DateTime
  id: ID!
  modelId: Int!
  performedAt: ISO8601DateTime
  priority: Int
  queueName: String
  retriedGoodJobId: String
  scheduledAt: ISO8601DateTime
  serializedParams: JSON
  updatedAt: ISO8601DateTime!
}

type ModelAttachment implements ModelInterface & Node {
  attachment: Attachment
  createdAt: ISO8601DateTime!
  id: ID!
  modelId: Int!
  name: String!
  updatedAt: ISO8601DateTime!
}

"""Autogenerated input type of ModelAttachmentCreateUpdate"""
input ModelAttachmentCreateUpdateInput {
  """A unique identifier for the client performing the mutation."""
  clientMutationId: String
  name: String!
  objectId: ID
  ownerId: ID!

  """Signed blob ID generated via `createDirectUpload` mutation"""
  attachmentSignedId: String
}

"""Autogenerated return type of ModelAttachmentCreateUpdate."""
type ModelAttachmentCreateUpdatePayload {
  """A unique identifier for the client performing the mutation."""
  clientMutationId: String
  errors: [String!]!
  modelAttachment: ModelAttachment
}

"""An object with an ID."""
interface ModelAttachmentInterface implements ModelInterface & Node {
  attachments: [ModelAttachment!]!
  createdAt: ISO8601DateTime!

  """ID of the object."""
  id: ID!
  modelId: Int!
  updatedAt: ISO8601DateTime!
}

"""An object with an ID."""
interface ModelInterface implements Node {
  createdAt: ISO8601DateTime!

  """ID of the object."""
  id: ID!
  modelId: Int!
  updatedAt: ISO8601DateTime!
}

type Mutation {
  createDirectUpload(
    """Parameters for CreateDirectUpload"""
    input: CreateDirectUploadInput!
  ): CreateDirectUploadPayload
  destroyObject(
    """Parameters for DestroyObject"""
    input: DestroyObjectInput!
  ): DestroyObjectPayload
  discardObject(
    """Parameters for DiscardObject"""
    input: DiscardObjectInput!
  ): DiscardObjectPayload
  modelAttachmentCreateUpdate(
    """Parameters for ModelAttachmentCreateUpdate"""
    input: ModelAttachmentCreateUpdateInput!
  ): ModelAttachmentCreateUpdatePayload
  superUserUpdate(
    """Parameters for SuperUserUpdate"""
    input: SuperUserUpdateInput!
  ): SuperUserUpdatePayload
  userOtpUpdate(
    """Parameters for UserOtpUpdate"""
    input: UserOtpUpdateInput!
  ): UserOtpUpdatePayload
  userUpdate(
    """Parameters for UserUpdate"""
    input: UserUpdateInput!
  ): UserUpdatePayload
}

"""An object with an ID."""
interface Node {
  """ID of the object."""
  id: ID!
}

type Query {
  currentUser: User
  customNode(name: String!, id: ID!): Node
  env: String!

  """Fetches an object given its ID."""
  node(
    """ID of the object."""
    id: ID!
  ): Node

  """Fetches a list of objects given a list of IDs."""
  nodes(
    """IDs of the objects."""
    ids: [ID!]!
  ): [Node]!
  spoof: Boolean!
  superUser: SuperUser!
}

type SuperUser implements ModelInterface & Node {
  createdAt: ISO8601DateTime!
  id: ID!
  jobRecords: [JobRecord!]!
  modelId: Int!
  name: String
  updatedAt: ISO8601DateTime!
  users(term: String = null): [User!]!
  versions(itemId: ID!, itemType: String!): [Version!]!
}

"""Autogenerated input type of SuperUserUpdate"""
input SuperUserUpdateInput {
  """A unique identifier for the client performing the mutation."""
  clientMutationId: String
  objectId: ID
  spoofId: ID
}

"""Autogenerated return type of SuperUserUpdate."""
type SuperUserUpdatePayload {
  """A unique identifier for the client performing the mutation."""
  clientMutationId: String
  errors: [String!]!
  user: User
}

type User implements ModelAttachmentInterface & ModelInterface & Node {
  attachments: [ModelAttachment!]!
  avatar: Attachment
  cannyToken: String
  confirmedAt: ISO8601DateTime
  createdAt: ISO8601DateTime!
  id: ID!
  modelId: Int!
  name: String
  nickname: String
  otpEnabled: Boolean!
  otpProvisioningUri: String!
  spoof: Boolean!
  updatedAt: ISO8601DateTime!
}

"""Autogenerated input type of UserOtpUpdate"""
input UserOtpUpdateInput {
  """A unique identifier for the client performing the mutation."""
  clientMutationId: String
  objectId: ID!
  otpCode1: String!
  otpCode2: String!
  otpKey: String!
}

"""Autogenerated return type of UserOtpUpdate."""
type UserOtpUpdatePayload {
  """A unique identifier for the client performing the mutation."""
  clientMutationId: String
  errors: [String!]!
  user: User
}

"""Autogenerated input type of UserUpdate"""
input UserUpdateInput {
  """A unique identifier for the client performing the mutation."""
  clientMutationId: String
  name: String = null
  nickname: String = null
  objectId: ID!

  """Signed blob ID generated via `createDirectUpload` mutation"""
  avatarSignedId: String
  sendConfirmationInstructions: Boolean
}

"""Autogenerated return type of UserUpdate."""
type UserUpdatePayload {
  """A unique identifier for the client performing the mutation."""
  clientMutationId: String
  errors: [String!]!
  user: User
}

type Version implements ModelInterface & Node {
  changes: [VersionChange!]!
  createdAt: ISO8601DateTime!
  event: String!
  id: ID!
  itemId: Int!
  itemType: String!
  metadata: JSON
  modelId: Int!
  updatedAt: ISO8601DateTime!
  user: User
  whodunnit: String
}

type VersionChange {
  label: String!
  newValue: String
  previousValue: String
}
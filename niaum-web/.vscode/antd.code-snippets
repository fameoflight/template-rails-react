{
  "reactFormPage": {
    "prefix": "ant form component",
    "description": "antd form in react",
    "body": [
      "import React from \"react\";",
      "import _ from \"lodash\";",
      "import { Form, Input, Button, FormInstance } from \"antd\";",
      "",
      "interface I${0:${TM_FILENAME_BASE}}Props {",
      "  form?: FormInstance<any>;",
      "  record?: any;",
      "  onSubmit?: (values: any) => void;",
      "}",
      "",
      "function ${0:${TM_FILENAME_BASE}}(props: I${0:${TM_FILENAME_BASE}}Props){",
      "  const record = props.record;",
      "",
      "  const onFinish = (values) => {",
      "    props.onSubmit?.(values);",
      "  };",
      "",
      "  const onFinishFailed = (errorInfo) => {",
      "    console.log(\"Failed:\", errorInfo);",
      "  };",
      "",
      "  return (",
      "    <Form ",
      "       form={props.form}",
      "       layout=\"vertical\"",
      "       onFinish={onFinish} ",
      "       name=\"${0:${TM_FILENAME_BASE}}\"",
      "       onFinishFailed={onFinishFailed}>",
      "",
      "      <Form.Item name=\"id\" hidden initialValue={_.get(record, \"id\")} >",
      "         <Input />",
      "      </Form.Item>",
      "",
      "      <Form.Item",
      "        label=\"Name\"",
      "        name=\"name\"",
      "        initialValue={_.get(record, 'name')}",
      "        rules={[",
      "          {",
      "            required: true,",
      "            message: \"Please input name!\",",
      "          },",
      "        ]}",
      "      >",
      "        <Input />",
      "      </Form.Item>",
      "",
      "      <Form.Item",
      "         label=\"Description\"",
      "         name=\"description\"",
      "         initialValue={_.get(record, 'description')}>",
      "        <Input.TextArea />",
      "      </Form.Item>",
      "",
      "      {props.onSubmit ? <Form.Item>",
      "        <Button type=\"primary\" htmlType=\"submit\">",
      "          Submit",
      "        </Button>",
      "      </Form.Item> : null}",
      "    </Form>",
      "  );",
      "};",
      "",
      "export default ${0:${TM_FILENAME_BASE}};"
    ]
  },
  "reactAntRelayFormPage": {
    "prefix": "ant relay form component",
    "description": "antd relay form in react",
    "body": [
      "import React from \"react\";",
      "import _ from \"lodash\";",
      "import { Form, Input, Button, FormInstance } from \"antd\";",
      "import { useFragment, graphql } from \"react-relay/hooks\";",
      "import {  ${0:${TM_FILENAME_BASE}}_record\\$key } from \"@picasso/fragments/src/${0:${TM_FILENAME_BASE}}_record.graphql\";",
      "",
      "const fragmentSpec = graphql`",
      "  fragment ${0:${TM_FILENAME_BASE}}_record on User {",
      "    id",
      "    name",
      "  }",
      "`;",
      "",
      "",
      "",
      "interface I${0:${TM_FILENAME_BASE}}Props {",
      "  form?: FormInstance<any>;",
      "  record: ${0:${TM_FILENAME_BASE}}_record\\$key | null;",
      "  onSubmit?: (values: any) => void;",
      "}",
      "",
      "function ${0:${TM_FILENAME_BASE}}(props: I${0:${TM_FILENAME_BASE}}Props){",
      "  const record = useFragment(fragmentSpec, props.record);",
      "",
      "  const onFinish = (values) => {",
      "    props.onSubmit?.(values);",
      "  };",
      "",
      "  const onFinishFailed = (errorInfo) => {",
      "    console.log(\"Failed:\", errorInfo);",
      "  };",
      "",
      "  return (",
      "    <Form ",
      "       preserve={false}",
      "       form={props.form}",
      "       layout=\"vertical\"",
      "       onFinish={onFinish} ",
      "       name=\"${0:${TM_FILENAME_BASE}}\"",
      "       onFinishFailed={onFinishFailed}>",
      "",
      "      <Form.Item name=\"id\" hidden initialValue={record?.id}>",
      "         <Input />",
      "      </Form.Item>",
      "",
      "      <Form.Item",
      "        label=\"Name\"",
      "        name=\"name\"",
      "        initialValue={record?.name}",
      "        rules={[",
      "          {",
      "            required: true,",
      "            message: \"Please input name!\",",
      "          },",
      "        ]}",
      "      >",
      "        <Input />",
      "      </Form.Item>",
      "",
      "      <Form.Item",
      "         label=\"Description\"",
      "         name=\"description\"",
      "         initialValue={record?.description}",
      "       >",
      "        <Input.TextArea />",
      "      </Form.Item>",
      "",
      "      {props.onSubmit ? <Form.Item>",
      "        <Button type=\"primary\" htmlType=\"submit\">",
      "          Submit",
      "        </Button>",
      "      </Form.Item> : null}",
      "    </Form>",
      "  );",
      "};",
      "",
      "export default ${0:${TM_FILENAME_BASE}};"
    ]
  }
}